<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <ParameterAction />
    <_.fcp.ParameterActionClearSelection.true...ParameterActionClearSelection />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Difference' datatype='real' default-format='N' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column alias='Daily' caption='Select View' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;daily&quot;'>
        <calculation class='tableau' formula='&quot;daily&quot;' />
        <aliases>
          <alias key='&quot;daily&quot;' value='Daily' />
          <alias key='&quot;monthly&quot;' value='Monthly' />
        </aliases>
        <members>
          <member alias='Monthly' value='&quot;monthly&quot;' />
          <member alias='Daily' value='&quot;daily&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='full_data_clean.csv+ (Multiple Connections)' inline='true' name='federated.1ddwt8a08jfq4218g8h690ucr3lw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='full_data_clean' name='textscan.1rrt09m0o9mttj10xjvnb0vdyg8y'>
            <connection class='textscan' directory='C:/Users/py199/Desktop/BoE interview' filename='full_data_clean.csv' password='' server='' />
          </named-connection>
          <named-connection caption='full_version' name='textscan.1ur0sky1l5ncyy14u9s690m327xg'>
            <connection class='textscan' directory='C:/Users/py199/Desktop/BoE interview' filename='full_version.csv' password='' server='' />
          </named-connection>
          <named-connection caption='unemplyment rate' name='textscan.1nhspbt1wr59e11b1tome0b8v97b'>
            <connection class='textscan' directory='C:/Users/py199/Desktop/BoE interview' filename='unemplyment rate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1rrt09m0o9mttj10xjvnb0vdyg8y' name='full_data_clean.csv' table='[full_data_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='transport_type' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1rrt09m0o9mttj10xjvnb0vdyg8y' name='full_data_clean.csv' table='[full_data_clean#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='transport_type' ordinal='1' />
              <column datatype='real' name='value' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.1ur0sky1l5ncyy14u9s690m327xg' name='full_version.csv' table='[full_version#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date_(note 1)' ordinal='0' />
              <column datatype='string' name='Weekday' ordinal='1' />
              <column datatype='real' name='Cars' ordinal='2' />
              <column datatype='real' name='Light Commercial Vehicles' ordinal='3' />
              <column datatype='real' name='Heavy Goods Vehicles' ordinal='4' />
              <column datatype='real' name='All motor vehicles' ordinal='5' />
              <column datatype='real' name='National Rail' ordinal='6' />
              <column datatype='real' name='Transport for London Tube' ordinal='7' />
              <column datatype='real' name='Transport for London Bus' ordinal='8' />
              <column datatype='real' name='Bus (excluding London)' ordinal='9' />
              <column datatype='real' name='Cycling' ordinal='10' />
              <column datatype='string' name='Revised' ordinal='11' />
              <column datatype='string' name='Notes by day' ordinal='12' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[full_data_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[full_data_clean.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_data_clean.csv_6166FD88CD7B4D14B5382720423196D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transport_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[transport_type]</local-name>
            <parent-name>[full_data_clean.csv]</parent-name>
            <remote-alias>transport_type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_data_clean.csv_6166FD88CD7B4D14B5382720423196D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[full_data_clean.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_data_clean.csv_6166FD88CD7B4D14B5382720423196D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_(note 1)</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date_(note 1)]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>Date_(note 1)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekday</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekday]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>Weekday</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cars]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>Cars</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Light Commercial Vehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Light Commercial Vehicles]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>Light Commercial Vehicles</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Heavy Goods Vehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Heavy Goods Vehicles]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>Heavy Goods Vehicles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>All motor vehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[All motor vehicles]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>All motor vehicles</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>National Rail</remote-name>
            <remote-type>5</remote-type>
            <local-name>[National Rail]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>National Rail</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transport for London Tube</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transport for London Tube]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>Transport for London Tube</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transport for London Bus</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transport for London Bus]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>Transport for London Bus</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bus (excluding London)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bus (excluding London)]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>Bus (excluding London)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cycling</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cycling]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>Cycling</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Revised</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Revised]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>Revised</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Notes by day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Notes by day]</local-name>
            <parent-name>[full_version.csv]</parent-name>
            <remote-alias>Notes by day</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[full_version.csv_D953CA057819415A9A12BB6F7AC31570]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Bus (excluding London)]' role='measure' type='quantitative' />
      <column caption='Days' datatype='string' name='[Calculation_1498854318369419267]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Weekday] IN (&apos;Sun&apos;,&apos;Sat&apos; ) THEN &apos;Weekend&apos;&#13;&#10;ELSE &apos;Weekday&apos;&#13;&#10;END' />
      </column>
      <column caption='Show View' datatype='string' name='[Calculation_2167357321466552325]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
      </column>
      <column caption='Calculation2' datatype='string' name='[Calculation_2167357321469591558]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Transportation Modes Usage in Monthly Average&quot;' />
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_3873377154998779904]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([value]), -3, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Date (note 1)' datatype='date' name='[Date_(note 1)]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Heavy Goods Vehicles]' role='measure' type='quantitative' />
      <column datatype='real' name='[Light Commercial Vehicles]' role='measure' type='quantitative' />
      <column datatype='string' name='[Type Groups]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[transport_type]' new-bin='true'>
          <bin default-name='false' value='&quot;Commercial use&quot;'>
            <value>&quot;heavy_goods_vehicles&quot;</value>
            <value>&quot;light_commercial_vehicles&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Private Transport&quot;'>
            <value>&quot;all_motor_vehicles&quot;</value>
            <value>&quot;cars&quot;</value>
            <value>&quot;cycling&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Public Transport&quot;'>
            <value>&quot;bus_excluding_london&quot;</value>
            <value>&quot;national_rail&quot;</value>
            <value>&quot;tfl_bus&quot;</value>
            <value>&quot;tfl_tube&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='full_data_clean.csv' datatype='table' name='[__tableau_internal_object_id__].[full_data_clean.csv_6166FD88CD7B4D14B5382720423196D7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='full_version.csv' datatype='table' name='[__tableau_internal_object_id__].[full_version.csv_D953CA057819415A9A12BB6F7AC31570]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Transport Type' datatype='string' name='[transport_type]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column-instance column='[Bus (excluding London)]' derivation='Avg' name='[avg:Bus (excluding London):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Heavy Goods Vehicles]' derivation='Avg' name='[avg:Heavy Goods Vehicles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Light Commercial Vehicles]' derivation='Avg' name='[avg:Light Commercial Vehicles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2167357321469591558]' derivation='None' name='[none:Calculation_2167357321469591558:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[transport_type]' derivation='None' name='[none:transport_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Heavy Goods Vehicles]' derivation='Sum' name='[sum:Heavy Goods Vehicles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Light Commercial Vehicles]' derivation='Sum' name='[sum:Light Commercial Vehicles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date_(note 1)]' derivation='Month-Trunc' name='[tmn:Date_(note 1):ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Days,YEAR(Date),MONTH(Date))' hidden='true' name='[Action (Days,YEAR(Date),MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1498854318369419267]' />
          <groupfilter function='level-members' level='[yr:date:ok]' />
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date (note 1)),Transport Type)' hidden='true' name='[Action (MONTH(Date (note 1)),Transport Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Date_(note 1):ok]' />
          <groupfilter function='level-members' level='[transport_type]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date),Transport Type)' hidden='true' name='[Action (MONTH(Date),Transport Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[transport_type]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.865691' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.134309' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Type Groups]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Public Transport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Private Transport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Commercial use&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:Bus (excluding London):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:Light Commercial Vehicles:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw].[sum:Light Commercial Vehicles:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:Heavy Goods Vehicles:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw].[sum:Heavy Goods Vehicles:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw].[sum:value:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:Unemployment rate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_2167357321469591558:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ddwt8a08jfq4218g8h690ucr3lw].[sum:Unemployment rate:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2167357321469591558:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Transportation Modes Usage in Monthly Average&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:date:ok]' palette='sf_color_safe' type='palette'>
            <map to='#006699'>
              <bucket>6</bucket>
            </map>
            <map to='#006699'>
              <bucket>12</bucket>
            </map>
            <map to='#08916d'>
              <bucket>4</bucket>
            </map>
            <map to='#08916d'>
              <bucket>10</bucket>
            </map>
            <map to='#529ee0'>
              <bucket>1</bucket>
            </map>
            <map to='#529ee0'>
              <bucket>8</bucket>
            </map>
            <map to='#d9a6c2'>
              <bucket>3</bucket>
            </map>
            <map to='#d9a6c2'>
              <bucket>9</bucket>
            </map>
            <map to='#f0e442'>
              <bucket>7</bucket>
            </map>
            <map to='#f59b00'>
              <bucket>5</bucket>
            </map>
            <map to='#f59b00'>
              <bucket>11</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:transport_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_motor_vehicles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;heavy_goods_vehicles&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;cycling&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;tfl_tube&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;national_rail&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cars&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;light_commercial_vehicles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bus_excluding_london&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;tfl_bus&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hong Kong&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Daily' caption='Select View' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;daily&quot;'>
          <calculation class='tableau' formula='&quot;daily&quot;' />
          <aliases>
            <alias key='&quot;daily&quot;' value='Daily' />
            <alias key='&quot;monthly&quot;' value='Monthly' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='full_data_clean.csv' id='full_data_clean.csv_6166FD88CD7B4D14B5382720423196D7'>
            <properties context=''>
              <relation connection='textscan.1rrt09m0o9mttj10xjvnb0vdyg8y' name='full_data_clean.csv' table='[full_data_clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='transport_type' ordinal='1' />
                  <column datatype='real' name='value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='full_version.csv' id='full_version.csv_D953CA057819415A9A12BB6F7AC31570'>
            <properties context=''>
              <relation connection='textscan.1ur0sky1l5ncyy14u9s690m327xg' name='full_version.csv' table='[full_version#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date_(note 1)' ordinal='0' />
                  <column datatype='string' name='Weekday' ordinal='1' />
                  <column datatype='real' name='Cars' ordinal='2' />
                  <column datatype='real' name='Light Commercial Vehicles' ordinal='3' />
                  <column datatype='real' name='Heavy Goods Vehicles' ordinal='4' />
                  <column datatype='real' name='All motor vehicles' ordinal='5' />
                  <column datatype='real' name='National Rail' ordinal='6' />
                  <column datatype='real' name='Transport for London Tube' ordinal='7' />
                  <column datatype='real' name='Transport for London Bus' ordinal='8' />
                  <column datatype='real' name='Bus (excluding London)' ordinal='9' />
                  <column datatype='real' name='Cycling' ordinal='10' />
                  <column datatype='string' name='Revised' ordinal='11' />
                  <column datatype='string' name='Notes by day' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[date]' />
              <expression op='[Date_(note 1)]' />
            </expression>
            <first-end-point object-id='full_data_clean.csv_6166FD88CD7B4D14B5382720423196D7' />
            <second-end-point object-id='full_version.csv_D953CA057819415A9A12BB6F7AC31570' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1ddwt8a08jfq4218g8h690ucr3lw'>
      <datasources>
        <datasource caption='full_data_clean.csv+ (Multiple Connections)' name='federated.1ddwt8a08jfq4218g8h690ucr3lw' />
      </datasources>
      <datasource-dependencies datasource='federated.1ddwt8a08jfq4218g8h690ucr3lw'>
        <column datatype='string' name='[Type Groups]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[transport_type]' new-bin='true'>
            <bin default-name='false' value='&quot;Commercial use&quot;'>
              <value>&quot;heavy_goods_vehicles&quot;</value>
              <value>&quot;light_commercial_vehicles&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Private Transport&quot;'>
              <value>&quot;all_motor_vehicles&quot;</value>
              <value>&quot;cars&quot;</value>
              <value>&quot;cycling&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Public Transport&quot;'>
              <value>&quot;bus_excluding_london&quot;</value>
              <value>&quot;national_rail&quot;</value>
              <value>&quot;tfl_bus&quot;</value>
              <value>&quot;tfl_tube&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Transport Type' datatype='string' name='[transport_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Type Groups]'>
        <groupfilter function='level-members' level='[Type Groups]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_2988F3C510ED40608C0DA61AC6DEC786]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 2' />
      <command command='tsc:brush'>
        <param name='field-captions' value='MONTH(Date)' />
        <param name='target' value='Sheet 2' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_54F9ED145EA1465780345535DEDBF7F3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action3_6B3D1AF258BD42E8B71F7A35775522AD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='MONTH(Date),Transport Type' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <edit-parameter-action caption='Parameter1' name='[Action4_068B61DC8E7740C29A84ED4408CF66EC]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='do-nothing' value='s:LROOT:' />
      <params>
        <param name='source-field' value='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_1498854318369419267:nk]' />
        <param name='target-parameter' value='[Parameters].[Parameter 2]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='full_data_clean.csv+ (Multiple Connections)' name='federated.1ddwt8a08jfq4218g8h690ucr3lw' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Daily' caption='Select View' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;daily&quot;'>
              <calculation class='tableau' formula='&quot;daily&quot;' />
              <aliases>
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;monthly&quot;' value='Monthly' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ddwt8a08jfq4218g8h690ucr3lw'>
            <column caption='Show View' datatype='string' name='[Calculation_2167357321466552325]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column datatype='string' name='[Type Groups]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[transport_type]' new-bin='true'>
                <bin default-name='false' value='&quot;Commercial use&quot;'>
                  <value>&quot;heavy_goods_vehicles&quot;</value>
                  <value>&quot;light_commercial_vehicles&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Private Transport&quot;'>
                  <value>&quot;all_motor_vehicles&quot;</value>
                  <value>&quot;cars&quot;</value>
                  <value>&quot;cycling&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Public Transport&quot;'>
                  <value>&quot;bus_excluding_london&quot;</value>
                  <value>&quot;national_rail&quot;</value>
                  <value>&quot;tfl_bus&quot;</value>
                  <value>&quot;tfl_tube&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2167357321466552325]' derivation='None' name='[none:Calculation_2167357321466552325:nk]' pivot='key' type='nominal' />
            <column-instance column='[transport_type]' derivation='None' name='[none:transport_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Transport Type' datatype='string' name='[transport_type]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_2167357321466552325:nk]'>
            <groupfilter function='member' level='[none:Calculation_2167357321466552325:nk]' member='&quot;monthly&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]'>
            <groupfilter function='level-members' level='[none:transport_type:nk]' />
          </filter>
          <slices>
            <column>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Type Groups]</column>
            <column>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_2167357321466552325:nk]</column>
            <column>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' value='55' />
            <format attr='width' field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' value='55' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#000000b2' />
            <format attr='stroke-size' id='refline1' value='3' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Type Groups]' value='Select Transport Type'>
              <formatted-text>
                <run>Select Transport Type</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='1.0' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' z-order='1' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tmn:date:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='#2022-02-24 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tmn:date:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]</rows>
        <cols>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{6E5CC553-367B-4144-8779-77F47FC05B2F}' />
    </worksheet>
    <worksheet name='Sheet 1 (3)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='full_data_clean.csv+ (Multiple Connections)' name='federated.1ddwt8a08jfq4218g8h690ucr3lw' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Daily' caption='Select View' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;daily&quot;'>
              <calculation class='tableau' formula='&quot;daily&quot;' />
              <aliases>
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;monthly&quot;' value='Monthly' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ddwt8a08jfq4218g8h690ucr3lw'>
            <column caption='Show View' datatype='string' name='[Calculation_2167357321466552325]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column datatype='string' name='[Type Groups]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[transport_type]' new-bin='true'>
                <bin default-name='false' value='&quot;Commercial use&quot;'>
                  <value>&quot;heavy_goods_vehicles&quot;</value>
                  <value>&quot;light_commercial_vehicles&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Private Transport&quot;'>
                  <value>&quot;all_motor_vehicles&quot;</value>
                  <value>&quot;cars&quot;</value>
                  <value>&quot;cycling&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Public Transport&quot;'>
                  <value>&quot;bus_excluding_london&quot;</value>
                  <value>&quot;national_rail&quot;</value>
                  <value>&quot;tfl_bus&quot;</value>
                  <value>&quot;tfl_tube&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2167357321466552325]' derivation='None' name='[none:Calculation_2167357321466552325:nk]' pivot='key' type='nominal' />
            <column-instance column='[transport_type]' derivation='None' name='[none:transport_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Transport Type' datatype='string' name='[transport_type]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Action (MONTH(Date),Transport Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_54F9ED145EA1465780345535DEDBF7F3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[transport_type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_2167357321466552325:nk]'>
            <groupfilter function='member' level='[none:Calculation_2167357321466552325:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]'>
            <groupfilter function='level-members' level='[none:transport_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Type Groups]</column>
            <column>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_2167357321466552325:nk]</column>
            <column>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]</column>
            <column>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Action (MONTH(Date),Transport Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' value='55' />
            <format attr='width' field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' value='55' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Type Groups]' value='Transport Type' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='1.0' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' z-order='1' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='#2020-12-25 12:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='2' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline10' label-type='automatic' scope='per-table' value='#2021-05-31 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='9' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline11' label-type='automatic' scope='per-table' value='#2021-08-30 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='10' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline12' label-type='automatic' scope='per-table' value='#2020-12-27 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='11' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline13' label-type='automatic' scope='per-table' value='#2020-12-01 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='12' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline14' label-type='automatic' scope='per-table' value='#2021-12-27 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='13' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline15' label-type='automatic' scope='per-table' value='#2021-12-28 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='14' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline16' label-type='automatic' scope='per-table' value='#2022-01-03 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='15' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline17' label-type='automatic' scope='per-table' value='#2022-04-15 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='16' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline18' label-type='automatic' scope='per-table' value='#2022-04-18 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='17' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline19' label-type='automatic' scope='per-table' value='#2022-05-02 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='18' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' scope='per-table' value='#2021-01-01 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='6' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline20' label-type='automatic' scope='per-table' value='#2022-06-02 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='19' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline21' label-type='automatic' scope='per-table' value='#2022-06-03 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='20' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline22' label-type='automatic' scope='per-table' value='#2022-08-29 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='21' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline23' label-type='automatic' scope='per-table' value='#2022-09-19 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='22' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline24' label-type='automatic' scope='per-table' value='#2020-12-26 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='23' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline25' label-type='automatic' scope='per-table' value='#2022-12-27 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='24' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline26' label-type='automatic' scope='per-table' value='#2023-04-07 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='26' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline27' label-type='automatic' scope='per-table' value='#2023-04-10 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='27' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline28' label-type='automatic' scope='per-table' value='#2023-05-01 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='28' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline29' label-type='automatic' scope='per-table' value='#2023-05-08 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='29' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label-type='automatic' scope='per-table' value='#2020-08-31 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='3' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline30' label-type='automatic' scope='per-table' value='#2023-05-29 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='30' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline4' label-type='automatic' scope='per-table' value='#2020-05-25 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='4' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline5' label-type='automatic' scope='per-table' value='#2023-01-02 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='25' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline6' label-type='automatic' scope='per-table' value='#2020-04-13 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='5' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline7' label-type='automatic' paired-id='refline8' scope='per-table' symmetric='false' value='#2021-04-02 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='7' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline8' label-type='automatic' paired-id='refline7' scope='per-table' symmetric='false' value='#2021-04-05 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='7' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline9' label-type='automatic' scope='per-table' value='#2021-05-03 00:00:00#' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]' z-order='8' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]</rows>
        <cols>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{567C0464-9412-4A65-B4FC-E711EDCCC763}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weekdays vs Weekends by Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='full_data_clean.csv+ (Multiple Connections)' name='federated.1ddwt8a08jfq4218g8h690ucr3lw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ddwt8a08jfq4218g8h690ucr3lw'>
            <column caption='Days' datatype='string' name='[Calculation_1498854318369419267]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Weekday] IN (&apos;Sun&apos;,&apos;Sat&apos; ) THEN &apos;Weekend&apos;&#13;&#10;ELSE &apos;Weekday&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Type Groups]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[transport_type]' new-bin='true'>
                <bin default-name='false' value='&quot;Commercial use&quot;'>
                  <value>&quot;heavy_goods_vehicles&quot;</value>
                  <value>&quot;light_commercial_vehicles&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Private Transport&quot;'>
                  <value>&quot;all_motor_vehicles&quot;</value>
                  <value>&quot;cars&quot;</value>
                  <value>&quot;cycling&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Public Transport&quot;'>
                  <value>&quot;bus_excluding_london&quot;</value>
                  <value>&quot;national_rail&quot;</value>
                  <value>&quot;tfl_bus&quot;</value>
                  <value>&quot;tfl_tube&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Weekday]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1498854318369419267]' derivation='None' name='[none:Calculation_1498854318369419267:nk]' pivot='key' type='nominal' />
            <column-instance column='[transport_type]' derivation='None' name='[none:transport_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Transport Type' datatype='string' name='[transport_type]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Action (MONTH(Date),Transport Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_54F9ED145EA1465780345535DEDBF7F3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[transport_type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]'>
            <groupfilter function='level-members' level='[none:transport_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Type Groups]</column>
            <column>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]</column>
            <column>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Action (MONTH(Date),Transport Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' field-type='quantitative' max='1.4209736980076899' min='0.10000000000000001' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' id='refline1' value='3' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='opacity' id='refline0' value='88' />
            <format attr='stroke-size' id='refline0' value='1' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[mn:date:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[mn:date:ok]' />
              <lod column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[yr:date:ok]' />
              <lod column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[mn:date:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' z-order='1' />
            <reference-line axis-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='1.0' value-column='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ddwt8a08jfq4218g8h690ucr3lw].[yr:date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ddwt8a08jfq4218g8h690ucr3lw].[mn:date:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Days:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_1498854318369419267:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average. Value: </run>
                <run bold='true'><![CDATA[<[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:qk]</rows>
        <cols>([federated.1ddwt8a08jfq4218g8h690ucr3lw].[yr:date:ok] / [federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_1498854318369419267:nk])</cols>
      </table>
      <simple-id uuid='{22005D69-2D19-4A8F-9E3A-A5700AC72CE7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='full_data_clean.csv+ (Multiple Connections)' name='federated.1ddwt8a08jfq4218g8h690ucr3lw' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Daily' caption='Select View' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;daily&quot;'>
          <calculation class='tableau' formula='&quot;daily&quot;' />
          <aliases>
            <alias key='&quot;daily&quot;' value='Daily' />
            <alias key='&quot;monthly&quot;' value='Monthly' />
          </aliases>
          <members>
            <member alias='Monthly' value='&quot;monthly&quot;' />
            <member alias='Daily' value='&quot;daily&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ddwt8a08jfq4218g8h690ucr3lw'>
        <column datatype='string' name='[Type Groups]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[transport_type]' new-bin='true'>
            <bin default-name='false' value='&quot;Commercial use&quot;'>
              <value>&quot;heavy_goods_vehicles&quot;</value>
              <value>&quot;light_commercial_vehicles&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Private Transport&quot;'>
              <value>&quot;all_motor_vehicles&quot;</value>
              <value>&quot;cars&quot;</value>
              <value>&quot;cycling&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Public Transport&quot;'>
              <value>&quot;bus_excluding_london&quot;</value>
              <value>&quot;national_rail&quot;</value>
              <value>&quot;tfl_bus&quot;</value>
              <value>&quot;tfl_tube&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Transport Type' datatype='string' name='[transport_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='92' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='67' type-v2='layout-basic' w='99000' x='500' y='889'>
              <zone forceUpdate='true' h='4772' id='44' type-v2='text' w='99000' x='500' y='889'>
                <formatted-text>
                  <run bold='true' fontsize='20'>How Covid Affected Our Traveling Behaviour</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='93450' id='10' name='Sheet 2' w='35937' x='63563' y='5661'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='93450' id='75' param='vert' type-v2='layout-flow' w='63063' x='500' y='5661'>
                <zone h='2667' id='3' name='Sheet 1' w='63063' x='500' y='5661'>
                  <layout-cache has-max-size-h='true' maxheight='24' minheight='24' minwidth='155' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='90783' id='83' name='Sheet 1 (3)' w='63063' x='500' y='8328'>
                  <layout-cache minheight='170' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='28667' id='13' name='Sheet 2' pane-specification-id='0' param='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[mn:date:ok]' type-v2='color' w='6250' x='93625' y='67667' />
        <zone h='11111' id='8' mode='checklist' name='Sheet 1' param='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Type Groups]' type-v2='filter' w='8625' x='91500' y='2444' />
        <zone h='4889' id='70' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='10000' x='4438' y='6889' />
        <zone h='22111' id='93' name='Sheet 1 (3)' pane-specification-id='0' param='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]' type-v2='color' w='11688' x='52563' y='4667' />
        <zone h='22000' id='88' name='Sheet 1' pane-specification-id='0' param='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]' type-v2='color' w='11313' x='52563' y='5111' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='125' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='124' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone forceUpdate='true' h='4772' id='44' type-v2='text' w='99000' x='500' y='889'>
                  <formatted-text>
                    <run bold='true' fontsize='20'>How Covid Affected Our Traveling Behaviour</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11111' id='8' mode='checkdropdown' name='Sheet 1' param='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Type Groups]' type-v2='filter' w='8625' x='91500' y='2444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='2667' id='3' is-fixed='true' name='Sheet 1' w='63063' x='500' y='5661'>
                  <layout-cache has-max-size-h='true' maxheight='24' minheight='24' minwidth='155' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22000' id='88' name='Sheet 1' pane-specification-id='0' param='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]' type-v2='color' w='11313' x='52563' y='5111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='93450' id='10' is-fixed='true' name='Sheet 2' w='35937' x='63563' y='5661'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28667' id='13' name='Sheet 2' pane-specification-id='0' param='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[mn:date:ok]' type-v2='color' w='6250' x='93625' y='67667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4889' id='70' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='10000' x='4438' y='6889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='90783' id='83' is-fixed='true' name='Sheet 1 (3)' w='63063' x='500' y='8328'>
                  <layout-cache minheight='170' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22111' id='93' name='Sheet 1 (3)' pane-specification-id='0' param='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]' type-v2='color' w='11688' x='52563' y='4667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B13B7E07-E0AC-45BF-9239-CC5A1387B0DC}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 1 (3)'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[mn:date:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{501C3175-47E2-476E-9019-8B9B56521BDA}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Type Groups]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_2167357321466552325:nk]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_2167357321469591558:nk]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:date:qk]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[sum:value:ok]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tyr:date:ok]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[yr:Date_(note 1):ok]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EB1CC04-119B-4E02-AA13-4854DC71E35D}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='39'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[mn:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Type Groups]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[avg:value:ok]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[mn:date:ok]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_1498854318369419267:nk]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Weekday:nk]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[sum:value:ok]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tmn:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9492C45D-8BF0-4DC5-AB29-2978DF3B4FC0}' />
    </window>
    <window class='worksheet' name='Sheet 1 (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]' show-title='false' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[Type Groups]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:Calculation_2167357321466552325:nk]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[none:transport_type:nk]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[sum:value:ok]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[tyr:date:ok]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[yr:Date_(note 1):ok]</field>
            <field>[federated.1ddwt8a08jfq4218g8h690ucr3lw].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFB7570E-2DED-4967-AA4D-3F3739F51F18}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TQAlq8XFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1 (3)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
